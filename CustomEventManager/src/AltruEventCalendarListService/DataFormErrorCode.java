//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-147 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.01.12 at 11:16:39 AM EST 
//


package AltruEventCalendarListService;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for DataFormErrorCode.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="DataFormErrorCode">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="GeneralError"/>
 *     &lt;enumeration value="InvalidFieldID"/>
 *     &lt;enumeration value="InsufficientFields"/>
 *     &lt;enumeration value="InvalidFieldValue"/>
 *     &lt;enumeration value="ConcurrencyViolation"/>
 *     &lt;enumeration value="RecordNotFound"/>
 *     &lt;enumeration value="BBPSGatewayProcessingFailure"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "DataFormErrorCode")
@XmlEnum
public enum DataFormErrorCode {

    @XmlEnumValue("GeneralError")
    GENERAL_ERROR("GeneralError"),
    @XmlEnumValue("InvalidFieldID")
    INVALID_FIELD_ID("InvalidFieldID"),
    @XmlEnumValue("InsufficientFields")
    INSUFFICIENT_FIELDS("InsufficientFields"),
    @XmlEnumValue("InvalidFieldValue")
    INVALID_FIELD_VALUE("InvalidFieldValue"),
    @XmlEnumValue("ConcurrencyViolation")
    CONCURRENCY_VIOLATION("ConcurrencyViolation"),
    @XmlEnumValue("RecordNotFound")
    RECORD_NOT_FOUND("RecordNotFound"),
    @XmlEnumValue("BBPSGatewayProcessingFailure")
    BBPS_GATEWAY_PROCESSING_FAILURE("BBPSGatewayProcessingFailure");
    private final String value;

    DataFormErrorCode(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DataFormErrorCode fromValue(String v) {
        for (DataFormErrorCode c: DataFormErrorCode.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
